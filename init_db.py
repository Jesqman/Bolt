#!/usr/bin/env python
"""Database initialization script"""
import os
import sys
from app import create_app, db
from models import User, Class, Lesson, Attendance, Finance, Collection


def init_database():
    """Initialize the database with tables"""
    print("üóÑÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    app = create_app()
    
    with app.app_context():
        # Create all tables
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        db.create_all()
        print("‚úì –¢–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("")
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python app.py")


def reset_database():
    """Reset the database (drop and recreate all tables)"""
    confirm = input("‚ö†Ô∏è  –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ. –í—ã —É–≤–µ—Ä–µ–Ω—ã? (yes/no): ")
    if confirm.lower() != 'yes':
        print("–û—Ç–º–µ–Ω–µ–Ω–æ.")
        return
    
    print("üîÑ –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    app = create_app()
    
    with app.app_context():
        print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü...")
        db.drop_all()
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∑–∞–Ω–æ–≤–æ...")
        db.create_all()
        print("‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞!")


def show_stats():
    """Show database statistics"""
    app = create_app()
    
    with app.app_context():
        print("\nüìä === –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===")
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {User.query.count()}")
        print(f"   - –£—á–∏—Ç–µ–ª—è: {User.query.filter_by(role='teacher').count()}")
        print(f"   - –°—Ç–∞—Ä–æ—Å—Ç—ã: {User.query.filter_by(role='starosta').count()}")
        print(f"   - –°—Ç—É–¥–µ–Ω—Ç—ã: {User.query.filter_by(role='student').count()}")
        print(f"üéì –ö–ª–∞—Å—Å—ã: {Class.query.count()}")
        print(f"üìö –£—Ä–æ–∫–∏: {Lesson.query.count()}")
        print(f"‚úÖ –ó–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏: {Attendance.query.count()}")
        print(f"üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏: {Finance.query.count()}")
        print(f"üóÇÔ∏è  –°–±–æ—Ä—ã: {Collection.query.count()}")


def main():
    """Main function"""
    if len(sys.argv) < 2:
        print("üóÑÔ∏è  –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
        print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python init_db.py init      - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        print("  python init_db.py reset     - –°–±—Ä–æ—Å–∏—Ç—å –ë–î (–í–ù–ò–ú–ê–ù–ò–ï: —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!)")
        print("  python init_db.py stats     - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        sys.exit(1)
    
    command = sys.argv[1]
    
    if command == 'init':
        init_database()
    elif command == 'reset':
        reset_database()
    elif command == 'stats':
        show_stats()
    else:
        print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        sys.exit(1)


if __name__ == '__main__':
    main()